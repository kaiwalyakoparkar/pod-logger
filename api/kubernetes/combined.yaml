apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: default
data:
  default.conf: |
    server {
        listen 80;
        add_header Permissions-Policy "geolocation=(self), microphone=()";
        location /api/ {
            proxy_pass http://podlogger-svc.default.svc.cluster.local:8080/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
            try_files $uri $uri/ =404;
        }
    }
---
apiVersion: v1
kind: Pod
metadata:
  name: podlogger
  labels:
    app: podlogger
spec:
  containers:
    - name: web
      image: kaiwalyakoparkar/podlogger-web
      ports:
      - containerPort: 80
      volumeMounts:
      - name: nginx-config
        mountPath: /etc/nginx/conf.d/default.conf
        subPath: default.conf
      - name: web-files
        mountPath: /usr/share/nginx/html
      resources:
        limits:
          memory: "128Mi"
          cpu: "500m"
        requests:
          memory: "64Mi"
          cpu: "250m"
    - name: api
      image: kaiwalyakoparkar/podlogger-api
      ports:
      - containerPort: 8080
      resources:
        limits:
          memory: "128Mi"
          cpu: "500m"
        requests:
          memory: "64Mi"
          cpu: "250m"
  volumes:
  - name: nginx-config
    configMap:
      name: nginx-config
  - name: web-files
    emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: podlogger-svc
spec:
  type: NodePort
  selector:
    app: podlogger
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30080
      name: web
    - port: 8080
      targetPort: 8080
      nodePort: 30081
      name: api
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pod-reader
  namespace: default
rules:
- apiGroups: [ "" ]
  resources: [ "pods", "services", "pods/log"]
  verbs: [ "get", "list", "watch"]
- apiGroups: [ "extensions" ]
  resources: [ "deployments" ]
  verbs: [ "get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: default-pod-reader
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pod-reader
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: namespace-list-role
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: namespace-list-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: namespace-list-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
